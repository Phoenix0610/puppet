input {
    file {
	type => "Authlog"
        path => "/var/log/auth.log"
        start_position => "beginning"
    }
    file {
	type => "Puppet"
        path => "/var/log/puppet.log"
        start_position => "beginning"
    }
}
filter {
grok {
    pattern => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} sshd\[%{BASE10NUM}\]: Failed password for %{USERNAME:username} from %{IP:src_ip} port %{BASE10NUM:port} ssh2"
    add_tag => "ssh_brute_force_attack"
}
grok {
  pattern => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} sudo: pam_unix\(sudo:auth\): authentication failure; logname=%{USERNAME:logname} uid=%{BASE10NUM:uid} euid=%{BASE10NUM:euid} tty=%{TTY:tty} ruser=%{USERNAME:ruser} rhost=(?:%{HOSTNAME:remote_host}|\s*) user=%{USERNAME:user}"
  add_tag => "sudo_auth_failure"
}
grok {
  pattern => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} sshd\[%{BASE10NUM}\]: Failed password for invalid user %{USERNAME:username} from %{IP:src_ip} port %{BASE10NUM:port} ssh2"
  add_tag => "ssh_failed_login"
}

grok {
  pattern => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} sshd\[%{BASE10NUM}\]: Accepted password for %{USERNAME:username} from %{IP:src_ip} port %{BASE10NUM:port} ssh2"
  add_tag => "ssh_sucessful_login"
}
} # End Filter


output {
  elasticsearch { host => "104.198.235.75:9200" protocol => http cluster => elasticsearch }
  stdout { codec => rubydebug }
}
